// Generated from src/antlr4/Humans.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class HumansLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly OPERATOR = 7;
	public static readonly DIRECTION = 8;
	public static readonly OBJECT = 9;
	public static readonly NEWLINE = 10;
	public static readonly IF = 11;
	public static readonly ROUND_BRACKET_OPEN = 12;
	public static readonly ROUND_BRACKET_CLOSE = 13;
	public static readonly CURLY_BRACKET_OPEN = 14;
	public static readonly CURLY_BRACKET_CLOSE = 15;
	public static readonly WHITESPACE = 16;
	public static readonly LINE_COMMENT = 17;
	public static readonly ERROR_CHARACTER = 18;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "OPERATOR", "DIRECTION", 
		"OBJECT", "NEWLINE", "IF", "ROUND_BRACKET_OPEN", "ROUND_BRACKET_CLOSE", 
		"CURLY_BRACKET_OPEN", "CURLY_BRACKET_CLOSE", "WHITESPACE", "LINE_COMMENT", 
		"ERROR_CHARACTER",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "' and '", "' or '", "'move'", "'pickup'", "'drop'", "'scan'", 
		undefined, undefined, undefined, undefined, "'if'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"OPERATOR", "DIRECTION", "OBJECT", "NEWLINE", "IF", "ROUND_BRACKET_OPEN", 
		"ROUND_BRACKET_CLOSE", "CURLY_BRACKET_OPEN", "CURLY_BRACKET_CLOSE", "WHITESPACE", 
		"LINE_COMMENT", "ERROR_CHARACTER",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(HumansLexer._LITERAL_NAMES, HumansLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return HumansLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(HumansLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Humans.g4"; }

	// @Override
	public get ruleNames(): string[] { return HumansLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return HumansLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return HumansLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return HumansLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x14\xAA\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\b\x03\b\x03\b\x03\b\x05\bM\n\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x05\t^\n\t\x03\n\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
		"\n\x05\nn\n\n\x03\v\x05\vq\n\v\x03\v\x03\v\x06\vu\n\v\r\v\x0E\vv\x03\f" +
		"\x03\f\x03\f\x03\r\x05\r}\n\r\x03\r\x03\r\x05\r\x81\n\r\x03\x0E\x05\x0E" +
		"\x84\n\x0E\x03\x0E\x03\x0E\x05\x0E\x88\n\x0E\x03\x0F\x05\x0F\x8B\n\x0F" +
		"\x03\x0F\x03\x0F\x05\x0F\x8F\n\x0F\x03\x10\x05\x10\x92\n\x10\x03\x10\x03" +
		"\x10\x05\x10\x96\n\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12" +
		"\x03\x12\x03\x12\x07\x12\xA0\n\x12\f\x12\x0E\x12\xA3\v\x12\x03\x12\x03" +
		"\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\xA1\x02\x02\x14\x03\x02\x03\x05" +
		"\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13" +
		"\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02" +
		"\x11!\x02\x12#\x02\x13%\x02\x14\x03\x02\x03\x04\x02\v\v\"\"\x02\xBB\x02" +
		"\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02" +
		"\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F" +
		"\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15" +
		"\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B" +
		"\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!" +
		"\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x03\'\x03\x02" +
		"\x02\x02\x05-\x03\x02\x02\x02\x072\x03\x02\x02\x02\t7\x03\x02\x02\x02" +
		"\v>\x03\x02\x02\x02\rC\x03\x02\x02\x02\x0FL\x03\x02\x02\x02\x11]\x03\x02" +
		"\x02\x02\x13m\x03\x02\x02\x02\x15t\x03\x02\x02\x02\x17x\x03\x02\x02\x02" +
		"\x19|\x03\x02\x02\x02\x1B\x83\x03\x02\x02\x02\x1D\x8A\x03\x02\x02\x02" +
		"\x1F\x91\x03\x02\x02\x02!\x97\x03\x02\x02\x02#\x9B\x03\x02\x02\x02%\xA8" +
		"\x03\x02\x02\x02\'(\x07\"\x02\x02()\x07c\x02\x02)*\x07p\x02\x02*+\x07" +
		"f\x02\x02+,\x07\"\x02\x02,\x04\x03\x02\x02\x02-.\x07\"\x02\x02./\x07q" +
		"\x02\x02/0\x07t\x02\x0201\x07\"\x02\x021\x06\x03\x02\x02\x0223\x07o\x02" +
		"\x0234\x07q\x02\x0245\x07x\x02\x0256\x07g\x02\x026\b\x03\x02\x02\x027" +
		"8\x07r\x02\x0289\x07k\x02\x029:\x07e\x02\x02:;\x07m\x02\x02;<\x07w\x02" +
		"\x02<=\x07r\x02\x02=\n\x03\x02\x02\x02>?\x07f\x02\x02?@\x07t\x02\x02@" +
		"A\x07q\x02\x02AB\x07r\x02\x02B\f\x03\x02\x02\x02CD\x07u\x02\x02DE\x07" +
		"e\x02\x02EF\x07c\x02\x02FG\x07p\x02\x02G\x0E\x03\x02\x02\x02HI\x07?\x02" +
		"\x02IM\x07?\x02\x02JK\x07#\x02\x02KM\x07?\x02\x02LH\x03\x02\x02\x02LJ" +
		"\x03\x02\x02\x02M\x10\x03\x02\x02\x02NO\x07w\x02\x02O^\x07r\x02\x02PQ" +
		"\x07f\x02\x02QR\x07q\x02\x02RS\x07y\x02\x02S^\x07p\x02\x02TU\x07n\x02" +
		"\x02UV\x07g\x02\x02VW\x07h\x02\x02W^\x07v\x02\x02XY\x07t\x02\x02YZ\x07" +
		"k\x02\x02Z[\x07i\x02\x02[\\\x07j\x02\x02\\^\x07v\x02\x02]N\x03\x02\x02" +
		"\x02]P\x03\x02\x02\x02]T\x03\x02\x02\x02]X\x03\x02\x02\x02^\x12\x03\x02" +
		"\x02\x02_`\x07y\x02\x02`a\x07c\x02\x02ab\x07n\x02\x02bn\x07n\x02\x02c" +
		"d\x07g\x02\x02de\x07o\x02\x02ef\x07r\x02\x02fg\x07v\x02\x02gn\x07{\x02" +
		"\x02hi\x07d\x02\x02ij\x07n\x02\x02jk\x07q\x02\x02kl\x07e\x02\x02ln\x07" +
		"m\x02\x02m_\x03\x02\x02\x02mc\x03\x02\x02\x02mh\x03\x02\x02\x02n\x14\x03" +
		"\x02\x02\x02oq\x07\x0F\x02\x02po\x03\x02\x02\x02pq\x03\x02\x02\x02qr\x03" +
		"\x02\x02\x02ru\x07\f\x02\x02su\x07\x0F\x02\x02tp\x03\x02\x02\x02ts\x03" +
		"\x02\x02\x02uv\x03\x02\x02\x02vt\x03\x02\x02\x02vw\x03\x02\x02\x02w\x16" +
		"\x03\x02\x02\x02xy\x07k\x02\x02yz\x07h\x02\x02z\x18\x03\x02\x02\x02{}" +
		"\x07\"\x02\x02|{\x03\x02\x02\x02|}\x03\x02\x02\x02}~\x03\x02\x02\x02~" +
		"\x80\x07*\x02\x02\x7F\x81\x07\"\x02\x02\x80\x7F\x03\x02\x02\x02\x80\x81" +
		"\x03\x02\x02\x02\x81\x1A\x03\x02\x02\x02\x82\x84\x07\"\x02\x02\x83\x82" +
		"\x03\x02\x02\x02\x83\x84\x03\x02\x02\x02\x84\x85\x03\x02\x02\x02\x85\x87" +
		"\x07+\x02\x02\x86\x88\x07\"\x02\x02\x87\x86\x03\x02\x02\x02\x87\x88\x03" +
		"\x02\x02\x02\x88\x1C\x03\x02\x02\x02\x89\x8B\x07\"\x02\x02\x8A\x89\x03" +
		"\x02\x02\x02\x8A\x8B\x03\x02\x02\x02\x8B\x8C\x03\x02\x02\x02\x8C\x8E\x07" +
		"}\x02\x02\x8D\x8F\x07\"\x02\x02\x8E\x8D\x03\x02\x02\x02\x8E\x8F\x03\x02" +
		"\x02\x02\x8F\x1E\x03\x02\x02\x02\x90\x92\x07\"\x02\x02\x91\x90\x03\x02" +
		"\x02\x02\x91\x92\x03\x02\x02\x02\x92\x93\x03\x02\x02\x02\x93\x95\x07\x7F" +
		"\x02\x02\x94\x96\x07\"\x02\x02\x95\x94\x03\x02\x02\x02\x95\x96\x03\x02" +
		"\x02\x02\x96 \x03\x02\x02\x02\x97\x98\t\x02\x02\x02\x98\x99\x03\x02\x02" +
		"\x02\x99\x9A\b\x11\x02\x02\x9A\"\x03\x02\x02\x02\x9B\x9C\x071\x02\x02" +
		"\x9C\x9D\x071\x02\x02\x9D\xA1\x03\x02\x02\x02\x9E\xA0\v\x02\x02\x02\x9F" +
		"\x9E\x03\x02\x02\x02\xA0\xA3\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02\xA1" +
		"\x9F\x03\x02\x02\x02\xA2\xA4\x03\x02\x02\x02\xA3\xA1\x03\x02\x02\x02\xA4" +
		"\xA5\x05\x15\v\x02\xA5\xA6\x03\x02\x02\x02\xA6\xA7\b\x12\x02\x02\xA7$" +
		"\x03\x02\x02\x02\xA8\xA9\v\x02\x02\x02\xA9&\x03\x02\x02\x02\x12\x02L]" +
		"mptv|\x80\x83\x87\x8A\x8E\x91\x95\xA1\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!HumansLexer.__ATN) {
			HumansLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(HumansLexer._serializedATN));
		}

		return HumansLexer.__ATN;
	}

}

